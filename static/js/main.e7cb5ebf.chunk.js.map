{"version":3,"sources":["panels/Send.js","panels/Feed.js","panels/Like.js","App.js","index.js","img/9.jpg"],"names":["Send","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","vkui","id","className","src","anik","top","placeholder","size","level","React","Component","Feed","jokes","isFetching","_this2","connect","subscribe","e","detail","type","setState","fetchedUser","data","console","log","send","loadJokes","_this3","fetch","then","response","json","value","title","before","photo_200","description","city","concat","first_name","last_name","style","marginTop","map","joke","multiline","asideContent","like_default","Like","App","go","activePanel","currentTarget","dataset","to","activeStory","onStoryChange","bind","assertThisInitialized","story","tabbar","onClick","selected","data-story","text","newsfeed_default","favorite_default","send_default","panels_Feed","panels_Like","panels_Send","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","ReactDOM","render","src_App","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e7cb5ebf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, FormLayout, Textarea, Button, PanelHeader } from '@vkontakte/vkui';\nimport '../style.css';\nimport anik from '../img/9.jpg';\n\n\nclass Send extends React.Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n      };\n    }\n\n    render() {\n        return(\n            <Panel id=\"send\" className=\"header\" >\n\t\t        <PanelHeader >Предложить</PanelHeader>\n\t\t        <img className=\"Persik\" src={anik} />\n\t\t        <FormLayout>\n                    <Textarea  top=\"Мы просим тебя, пожалуйста, проверь пунктуацию и ошибки, пусть твои анекдоты будет приятнее читать.\" placeholder=\"Нарды, армяне .....\" />\n    \t\t        <Button size=\"xl\" level=\"secondary\">Отправить</Button>\n\t             </FormLayout>\n\t        </Panel>\n            \n        )\n           \n    }\n};\n\n\nexport default Send;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport connect from '@vkontakte/vkui-connect';\nimport {List, Panel, ScreenSpinner, Cell, Group, ListItem, Avatar, PanelHeader,Button } from '@vkontakte/vkui';\nimport '../style.css';\nimport Icon16Like from '@vkontakte/icons/dist/16/like';\n\n\nclass Feed extends React.Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        jokes: [],\n        isFetching : true\n      };\n    }\n    componentDidMount() {\n        connect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tconsole.log(e.detail.data.id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n        this.loadJokes();\n        \n    }\n    loadJokes(){\n        //fetch('http://92.240.135.238:5000/')\n        fetch('https://api.icndb.com/jokes/random/10')\n        .then(response => response.json())\n        .then(data => {this.setState({ jokes: data.value});\n        });\n        this.state.isFetching = false;\n    }\n    /*loadJokes(){\n        fetch('http://92.240.135.238:5000/')\n        .then(response => response.json())\n        .then(data => {this.setState({ jokes: data});\n        });\n        this.state.isFetching = false;\n    }*/\n  \n    render() {\n        \n        const {jokes} = this.state;\n        const {isFetching} = this.state; \n        const {fetchedUser} = this.state;\n        return(\n            <Panel id=\"feed\">\n                <PanelHeader >Лента</PanelHeader>\n                {fetchedUser &&\n                <Group title=\"User Data Fetched with VK Connect\">\n\t\t\t        <ListItem\n\t\t\t\t        before={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\t        description={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t        >\n                     {`${fetchedUser.first_name} ${fetchedUser.last_name} ${fetchedUser.id}\n                     ${fetchedUser.city.title}`}\n\t\t\t        </ListItem>\n\t\t</Group>}\n\n                {isFetching &&  <ScreenSpinner className= \"spinner\" size=\"large\" style={{ marginTop: 20 }}/>}\n                {jokes.map(joke =>\n                    <Group className=\"post\">\n                        <List>\n                            <Cell multiline>{joke.joke}</Cell> \n                            <Cell asideContent={ <Button level=\"tertiary\" before={<Icon16Like/>} size=\"l\"></Button>}> </Cell>\n                        </List>\n                        \n                    </Group>\n                )}\n          </Panel>\n            \n        )\n           \n    }\n};\n\n\nexport default Feed;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ScreenSpinner, Spinner, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\nimport '../style.css';\n\n\nclass Like extends React.Component {\n    \n    constructor(props) {\n      super(props);\n      this.state = {\n        jokes: [],\n        isFetching : true\n      };\n    }\n    componentDidMount() {\n        this.loadJokes();\n        \n    }\n /*  loadJokes(){\n        //fetch('http://92.240.135.238:5000/')\n        fetch('https://api.icndb.com/jokes/random/10')\n        .then(response => response.json())\n        .then(data => {this.setState({ jokes: data.value});\n       // .then(data => {this.setState({ jokes: data.value});\n        });\n        console.log(this.state.jokes);\n        this.state.isFetching = false;\n    }*/\n    loadJokes(){\n        fetch('http://92.240.135.238:5000/')\n        .then(response => response.json())\n        .then(data => {this.setState({ jokes: data});\n        });\n        this.state.isFetching = false;\n    }\n  \n    render() {\n        \n        const {jokes} = this.state;\n        const {isFetching} = this.state; \n        return(\n            <Panel id=\"like\">\n                <PanelHeader >Любимые</PanelHeader>\n                {isFetching &&  <ScreenSpinner className= \"spinner\" size=\"large\" style={{ marginTop: 20 }}/>}\n                {jokes.map(joke =>\n                    <Group className=\"post\">\n                    {joke.joke}\n                    </Group>\n                )}\n          </Panel>\n            \n        )\n           \n    }\n};\n\n\nexport default Like;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View,Epic,Tabbar,TabbarItem,Panel,PanelHeader} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n//import './style.css';\nimport Send from './panels/Send';\nimport Feed from './panels/Feed';\nimport Like from './panels/Like';\n\nimport Icon28Favorite from '@vkontakte/icons/dist/28/favorite'\nimport Icon28Send from '@vkontakte/icons/dist/28/send'\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed'\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t\tactiveStory: 'feed',\n\t\t\tfetchedUser: null,\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t  }\n\t\n\t  onStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t  }\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tconsole.log(e.detail.data.id);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.data);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\t\n\t\t\treturn (\t\t\t\n\t\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t  <Tabbar >\n\t\t\t\t\t<TabbarItem className=\"tb\"\n\t\t\t\t\t  onClick={this.onStoryChange}\n\t\t\t\t\t  selected={this.state.activeStory === 'feed'}\n\t\t\t\t\t  data-story=\"feed\"\n\t\t\t\t\t  text=\"Лента\"\n\t\t\t\t\t><Icon28Newsfeed /></TabbarItem>\n\t\t\t\t\t<TabbarItem className=\"tb\"\n\t\t\t\t\t  onClick={this.onStoryChange}\n\t\t\t\t\t  selected={this.state.activeStory === 'like'}\n\t\t\t\t\t  data-story=\"like\"\n\t\t\t\t\t  text=\"Любимые\"\n\t\t\t\t\t><Icon28Favorite /></TabbarItem>\n\t\t\t\t\t<TabbarItem className=\"tb\"\n\t\t\t\t\t  onClick={this.onStoryChange}\n\t\t\t\t\t  selected={this.state.activeStory === 'send'}\n\t\t\t\t\t  data-story=\"send\"\n\t\t\t\t\t  text=\"Предложить\"\n\t\t\t\t\t><Icon28Send /></TabbarItem>\n\t\t\t\t  </Tabbar>\n\t\t\t\t}>\n\t\t\t\t  <View id=\"feed\" activePanel=\"feed\">\t\n\t\t\t\t\t\t<Feed id='feed' fetchedUser={this.state.fetchedUser}/>\t\t\t\t\t\n\t\t\t\t  </View>\n\t\t\t\t  <View id=\"like\" activePanel=\"like\">\n\t\t\t\t\t\t<Like id='like'/>\n\t\t\t\t  </View>\n\t\t\t\t  <View id=\"send\" activePanel=\"send\">\n\t\t\t\t\t\t<Send id='send'/>\n\t\t\t\t  </View>\n\t\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\nconnect.subscribe((e) => {\n    switch (e.detail.type) {\n        case 'VKWebAppUpdateConfig':\n            let schemeAttribute = document.createAttribute('scheme');\n            schemeAttribute.value = e.detail.data.scheme ? e.detail.data.scheme : 'client_light';\n            document.body.attributes.setNamedItem(schemeAttribute);\n            break;\n \n        default:\n            console.log(e.detail.type);\n    }\n });\n \n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/9.7dca66b2.jpg\";"],"sourceRoot":""}