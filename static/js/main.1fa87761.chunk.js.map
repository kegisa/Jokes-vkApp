{"version":3,"sources":["panels/Home.js","panels/Feed.js","App.js","index.js"],"names":["Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","className","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","Feed","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","jokes","loadJokes","_this2","fetch","then","response","json","data","setState","console","log","map","joke","React","Component","App","e","activePanel","currentTarget","dataset","to","activeStory","onStoryChange","bind","assertThisInitialized","story","connect","subscribe","detail","type","send","tabbar","selected","data-story","text","newsfeed_default","favorite_default","send_default","panels_Feed","panels_Home","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1fa87761.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n//import '../style.css';\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id} className=\"header\" >\n\t\t<PanelHeader >Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button className=\"button\" size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Block, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\nimport '../style.css';\n\n\nclass Feed extends React.Component {\n    \n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        jokes: []\n      };\n    }\n    componentDidMount() {\n        this.loadJokes();\n        \n    }\n    loadJokes(){\n        fetch('https://92.240.135.238:5000/')\n        .then(response => response.json())\n        .then(data => {this.setState({ jokes: data});\n        });\n        console.log(this.state.jokes);\n    }\n  \n    render() {\n        \n        const {jokes} = this.state;\n        return(\n            <Panel id=\"feed\">\n                <PanelHeader >Example</PanelHeader>\n                <Div>\n                {jokes.map(joke =>\n                    <Group title=\"Сегодня\">\n                        <p className=\"joke\">{joke.joke}</p>\n                    </Group>\n                )}\n                </Div> \n          </Panel>\n            \n        )\n           \n    }\n};\n\n\nexport default Feed;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport { View,Epic,Tabbar,TabbarItem,Panel,PanelHeader} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n//import './style.css';\nimport Home from './panels/Home';\nimport Feed from './panels/Feed';\n\nimport Icon28Favorite from '@vkontakte/icons/dist/28/favorite'\nimport Icon28Send from '@vkontakte/icons/dist/28/send'\nimport Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed'\n\nclass App extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\n\t\tthis.state = {\n\t\t  activeStory: 'more'\n\t\t};\n\t\tthis.onStoryChange = this.onStoryChange.bind(this);\n\t  }\n\t\n\t  onStoryChange (e) {\n\t\tthis.setState({ activeStory: e.currentTarget.dataset.story })\n\t  }\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\t\treturn (\n\t\t\t\t<Epic activeStory={this.state.activeStory} tabbar={\n\t\t\t\t  <Tabbar >\n\t\t\t\t\t<TabbarItem className=\"tb\"\n\t\t\t\t\t  onClick={this.onStoryChange}\n\t\t\t\t\t  selected={this.state.activeStory === 'feed'}\n\t\t\t\t\t  data-story=\"feed\"\n\t\t\t\t\t  text=\"Лента\"\n\t\t\t\t\t><Icon28Newsfeed /></TabbarItem>\n\t\t\t\t\t<TabbarItem className=\"tb\"\n\t\t\t\t\t  onClick={this.onStoryChange}\n\t\t\t\t\t  selected={this.state.activeStory === 'like'}\n\t\t\t\t\t  data-story=\"like\"\n\t\t\t\t\t  text=\"Любимые\"\n\t\t\t\t\t><Icon28Favorite /></TabbarItem>\n\t\t\t\t\t<TabbarItem className=\"tb\"\n\t\t\t\t\t  onClick={this.onStoryChange}\n\t\t\t\t\t  selected={this.state.activeStory === 'send'}\n\t\t\t\t\t  data-story=\"send\"\n\t\t\t\t\t  text=\"Предложить\"\n\t\t\t\t\t><Icon28Send /></TabbarItem>\n\t\t\t\t  </Tabbar>\n\t\t\t\t}>\n\t\t\t\t  <View id=\"feed\" activePanel=\"feed\">\n\t\t\t\t\t<Panel id=\"feed\">\n\t\t\t\t\t<Feed id='feed'/>\n\t\t\t\t\t</Panel>\n\t\t\t\t  </View>\n\t\t\t\t  <View id=\"like\" activePanel=\"like\">\n\t\t\t\t\t<Panel id=\"like\">\n\t\t\t\t\t  <PanelHeader>Любимые</PanelHeader>\n\t\t\t\t\t</Panel>\n\t\t\t\t  </View>\n\t\t\t\t  <View id=\"send\" activePanel=\"send\">\n\t\t\t\t\t<Home id='send'/>\n\t\t\t\t  </View>\n\t\t\t\t</Epic>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}